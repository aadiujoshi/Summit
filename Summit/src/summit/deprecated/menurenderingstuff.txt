//for centering on region coordinate
        // int xOffset = (int)((region.getWidth()%16)/2);
        // int yOffset = (int)((region.getHeight()%16)/2);

        // int startX = (int)(region.getX()-(region.getWidth()/2)) + xOffset;
        // int startY = (int)(region.getY()-(region.getHeight()/2)) + yOffset;

        // int endX = (int)(region.getX()+(region.getWidth()/2) - xOffset);
        // int endY = (int)(region.getY()+(region.getHeight()/2) - yOffset);

        // if((startX-endX)%2 == 1)
        //     System.out.println("dsfaadsfads");
        // startX -= (startX-endX)%2 != 0 ? 8 : 0;
        // startY -= (startY-endY)%2 != 0 ? 8 : 0;

        // endX += (startX-endX)%2 != 0 ? 8 : 0;
        // endY += (startY-endY)%2 != 0 ? 8 : 0;

        // System.out.println((startX-endX)/16);
        // System.out.println((startY-endY)/16);



if(!visible) return;

        Renderer ren = e.getRenderer();

        int rWidth = (int)getWidth();
        int rHeight = (int)getHeight();

        int startX = (int)(getX()-(rWidth/2));
        int startY = (int)(getY()-(rHeight/2));

        int endX = (int)(getX()+(rWidth/2));
        int endY = (int)(getY()+(rHeight/2));

        //traversed in pixel coordinates
        for (int x = startX; x <= endX; x+=16) {
            for (int y = startY; y <= endY; y+=16) {
                
                if(y == startY && x == startX){
                    ren.render(Sprite.MENU_CORNER, x, y, Renderer.NO_OP, null);
                    continue;
                }
                if(y == startY && x == endX){
                    ren.render(Sprite.MENU_CORNER, x, y, Renderer.FLIP_X, null);
                    continue;
                }
                if(y == endY && x == startX){
                    ren.render(Sprite.MENU_CORNER, x, y, Renderer.FLIP_Y, null);
                    continue;
                }
                if(y == endY && x == endX){
                    ren.render(Sprite.MENU_CORNER, x, y, Renderer.FLIP_X | Renderer.FLIP_Y, null);
                    continue;
                }
                //------------

                //check borders
                if(y == startY){
                    ren.render(Sprite.MENU_BORDER, x, y, Renderer.NO_OP, null);
                    continue;
                }
                if(y == endY){
                    ren.render(Sprite.MENU_BORDER, x, y, Renderer.FLIP_Y, null);
                    continue;
                }
                if(x == startX){
                    ren.render(Sprite.MENU_BORDER, x, y,  Renderer.ROTATE_90 | Renderer.FLIP_X, null);
                    continue;
                }
                if(x == endX){
                    ren.render(Sprite.MENU_BORDER, x, y, Renderer.ROTATE_90, null);
                    continue;
                }
                //------------

                //render inside
                ren.render(Sprite.MENU_FILL, x, y, Renderer.NO_OP, null);
            }
        }



        // if(parent == null)
        //     region = new Region(((int)(Renderer.WIDTH*relX)/16)*16, ((int)(Renderer.HEIGHT*relY)/16)*16, 
        //                         ((int)(Renderer.WIDTH*relWidth)/16)*16, ((int)(Renderer.HEIGHT*relHeight)/16)*16);
        // else {
        //     float w = ((int)(parent.getWidth()*relWidth)/16)*16;
        //     float h = ((int)(parent.getHeight()*relHeight)/16)*16;
        //     float x = (parent.getWidth()*relX);
        //     float y = (parent.getHeight()*relY);
            
        //     region = new Region(x+(parent.getX()-(parent.getWidth()/2)), y+(parent.getY()-(parent.getHeight()/2)), w, h);
        // }